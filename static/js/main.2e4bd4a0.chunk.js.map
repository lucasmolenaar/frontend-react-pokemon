{"version":3,"sources":["components/PokemonCard/PokemonCard.js","components/Navigation/Navigation.js","assets/logo.png","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","pokemon","useState","singlePokemon","setSinglePokemon","useEffect","a","axios","get","url","result","data","console","error","fetchSinglePokemon","Object","keys","length","className","name","src","sprites","other","alt","moves","weight","abilities","map","ability","id","Navigation","handleSetAllPokemons","nextPokemonUrl","setNextPokemonUrl","previousPokemonUrl","setPreviousPokemonUrl","fetchPreviousPokemons","isDisabled","previous","results","fetchNextPokemons","next","disabled","type","onClick","App","allPokemons","setAllPokemons","fetchAllPokemons","logo","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4bd4a0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nimport './PokemonCard.css';\n\nconst PokemonCard = ({ pokemon }) => {\n\n    const [singlePokemon, setSinglePokemon] = useState({});\n\n    useEffect(() => {\n        const fetchSinglePokemon = async () => {\n            try {\n                const result = await axios.get(pokemon.url);\n                setSinglePokemon(result.data);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n\n        fetchSinglePokemon();\n    }, [pokemon.url])\n\n    return (\n        <>\n            {\n                Object.keys(singlePokemon).length > 0 &&\n                <li className='pokemon-card' key={singlePokemon.id}>\n                    <h2 className='pokemon-name'>{singlePokemon.name}</h2>\n                    <img className='pokemon-img' src={singlePokemon.sprites.other['dream_world']['front_default']} alt=\"\"/>\n                    <p>Moves: {singlePokemon.moves.length}</p>\n                    <p>Weight: {singlePokemon.weight}</p>\n\n                    <p>Abilities:</p>\n                    <ul className='abilities-list'>\n                        {\n                            singlePokemon.abilities.map((ability) => {\n                                return (\n                                    <li className='ability-item' key={ability.ability.name}>\n                                        {ability.ability.name}\n                                    </li>\n                                );\n                            })\n                        }\n                    </ul>\n                </li>\n            }\n        </>\n    );\n};\n\nexport default PokemonCard;","import React from 'react';\nimport './Navigation.css';\nimport axios from \"axios\";\n\nconst Navigation = ( { handleSetAllPokemons, nextPokemonUrl, setNextPokemonUrl, previousPokemonUrl, setPreviousPokemonUrl, isDisabled }) => {\n\n    const fetchPreviousPokemons = async () => {\n        if (previousPokemonUrl) {\n            try {\n                const result = await axios.get(previousPokemonUrl);\n                setPreviousPokemonUrl(result.data.previous);\n                handleSetAllPokemons(result.data.results);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n    const fetchNextPokemons = async () => {\n        try {\n            const result = await axios.get(nextPokemonUrl);\n            setPreviousPokemonUrl(result.data.previous);\n            setNextPokemonUrl(result.data.next);\n            handleSetAllPokemons(result.data.results);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    return (\n        <ul className='nav'>\n            <li>\n                <button\n                    disabled={!previousPokemonUrl}\n                    type='button'\n                    className='nav-item'\n                    onClick={fetchPreviousPokemons}\n                >\n                    Vorige\n                </button>\n            </li>\n\n            <li>\n                <button\n                    disabled={!nextPokemonUrl}\n                    type='button'\n                    className='nav-item'\n                    onClick={fetchNextPokemons}\n                >\n                    Volgende\n                </button>\n            </li>\n        </ul>\n    );\n};\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/logo.c12eb752.png\";","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nimport PokemonCard from \"./components/PokemonCard/PokemonCard\";\nimport Navigation from \"./components/Navigation/Navigation\";\n\nimport './App.css';\nimport logo from './assets/logo.png';\n\nfunction App() {\n    const [previousPokemonUrl, setPreviousPokemonUrl] = useState(null);\n    const [nextPokemonUrl, setNextPokemonUrl] = useState(null);\n    const [allPokemons, setAllPokemons] = useState([]);\n\n    useEffect(() => {\n        const fetchAllPokemons = async () => {\n            try {\n                const result = await axios.get(`https://pokeapi.co/api/v2/pokemon`);\n                setAllPokemons(result.data.results);\n                setNextPokemonUrl(result.data.next);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        fetchAllPokemons();\n    }, [])\n\n  return (\n    <div className='app'>\n        <img className='logo' src={logo} alt=\"pokemon-logo\"/>\n\n        <Navigation\n            handleSetAllPokemons={setAllPokemons}\n            nextPokemonUrl={nextPokemonUrl}\n            setNextPokemonUrl={setNextPokemonUrl}\n            previousPokemonUrl={previousPokemonUrl}\n            setPreviousPokemonUrl={setPreviousPokemonUrl}\n        />\n\n          <ul className='pokemon-list'>\n              {\n                  Object.keys(allPokemons).length > 0 &&\n                      allPokemons.map((pokemon, index) => {\n                          return (\n                              <PokemonCard\n                                  pokemon={pokemon}\n                                  key={index}\n                              />\n                          );\n                      })\n              }\n          </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}